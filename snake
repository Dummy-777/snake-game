<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Snake Game</title>
  <style>
    body {
      margin: 0;
      background-color: #000;
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    h1 {
      color: #0f0;
      font-family: monospace;
    }

    canvas {
      background-color: #111;
      border: 2px solid #0f0;
    }
  </style>
</head>
<body>
  <h1 id="scoreDisplay">Score: 0</h1>
  <canvas id="game" width="400" height="400"></canvas>

  <script>
    const canvas = document.getElementById("game");
    const ctx = canvas.getContext("2d");

    const gridSize = 20;
    const tileCount = canvas.width / gridSize;

    let snake = [{ x: 10, y: 10 }];
    let velocity = { x: 0, y: 0 };
    let fruits = [
      randomFruit(), randomFruit(), randomFruit(), randomFruit(),
      randomFruit(), randomFruit(), randomFruit(), randomFruit()
    ];
    let poison = randomFruit(); // poisonous fruit
    let score = 0;
    let gameStarted = false;
    let gameInterval;

    function randomFruit() {
      return {
        x: Math.floor(Math.random() * tileCount),
        y: Math.floor(Math.random() * tileCount)
      };
    }

    function resetGame() {
      clearInterval(gameInterval);
      gameStarted = false;
      velocity = { x: 0, y: 0 };
      snake = [{ x: 10, y: 10 }];
      fruits = [
        randomFruit(), randomFruit(), randomFruit(), randomFruit(),
        randomFruit(), randomFruit(), randomFruit(), randomFruit()
      ];
      poison = randomFruit();
      score = 0;
      document.getElementById("scoreDisplay").textContent = "Score: " + score;
      draw();
    }

    function gameLoop() {
      const head = {
        x: snake[0].x + velocity.x,
        y: snake[0].y + velocity.y
      };

      // Check poison
      if (head.x === poison.x && head.y === poison.y) {
        alert("You ate poison! ðŸ’€ Game Over. Score: " + score);
        resetGame();
        return;
      }

      // Game Over check
      if (
        head.x < 0 || head.y < 0 ||
        head.x >= tileCount || head.y >= tileCount ||
        snake.some(seg => seg.x === head.x && seg.y === head.y)
      ) {
        alert("Game Over! Score: " + score);
        resetGame();
        return;
      }

      snake.unshift(head);

      let ateFruit = false;

      for (let i = 0; i < fruits.length; i++) {
        if (head.x === fruits[i].x && head.y === fruits[i].y) {
          fruits[i] = randomFruit(); // Replace eaten fruit
          score++;
          document.getElementById("scoreDisplay").textContent = "Score: " + score;
          ateFruit = true;
          break;
        }
      }

      if (!ateFruit) {
        snake.pop();
      }

      draw();
    }

    function draw() {
      // Clear screen
      ctx.fillStyle = "#111";
      ctx.fillRect(0, 0, canvas.width, canvas.height);

      // Draw snake
      ctx.fillStyle = "#0f0";
      snake.forEach(seg => {
        ctx.fillRect(seg.x * gridSize, seg.y * gridSize, gridSize - 2, gridSize - 2);
      });

      // Draw all good fruits
      ctx.fillStyle = "#f00";
      fruits.forEach(fruit => {
        ctx.fillRect(fruit.x * gridSize, fruit.y * gridSize, gridSize - 2, gridSize - 2);
      });

      // Draw poison fruit
      ctx.fillStyle = "#800080"; // purple
      ctx.fillRect(poison.x * gridSize, poison.y * gridSize, gridSize - 2, gridSize - 2);
    }

    document.addEventListener("keydown", e => {
      const key = e.key.toLowerCase();

      if (!gameStarted) {
        gameInterval = setInterval(gameLoop, 150);
        gameStarted = true;
      }

      switch (key) {
        case "arrowup":
        case "w":
          if (velocity.y === 0) velocity = { x: 0, y: -1 };
          break;
        case "arrowdown":
        case "s":
          if (velocity.y === 0) velocity = { x: 0, y: 1 };
          break;
        case "arrowleft":
        case "a":
          if (velocity.x === 0) velocity = { x: -1, y: 0 };
          break;
        case "arrowright":
        case "d":
          if (velocity.x === 0) velocity = { x: 1, y: 0 };
          break;
      }
    });

    draw();
  </script>
</body>
</html>
